[{"E:\\BMJ React\\TodoReact\\todoo\\src\\App.js":"1","E:\\BMJ React\\TodoReact\\todoo\\src\\todoo.js":"2","E:\\BMJ React\\TodoReact\\todoo\\src\\reportWebVitals.js":"3","E:\\BMJ React\\TodoReact\\todoo\\src\\index.js":"4"},{"size":255,"mtime":1612770848084,"results":"5","hashOfConfig":"6"},{"size":2464,"mtime":1612770761823,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607920825095,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1607920825095,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pq98f4",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\BMJ React\\TodoReact\\todoo\\src\\App.js",[],"E:\\BMJ React\\TodoReact\\todoo\\src\\todoo.js",["19","20","21"],"import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Todoo extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todoo: [],\r\n      value: \"\",\r\n    };\r\n  }\r\n  add_todo = () => {\r\n    if (this.state.value !== \"\") {\r\n      let obj = { key: this.state.value };\r\n      this.setState({ todoo: [...this.state.todoo, obj], value: \"\" });\r\n    }\r\n  };\r\n  delete_todoo = (index) => {\r\n    this.state.todoo.splice(index, 1);\r\n    this.setState({\r\n      todoo: this.state.todoo,\r\n    });\r\n  };\r\n  edit_todoo(index, val) {\r\n    this.state.todoo[index].edit = true;\r\n    this.setState({\r\n      todoo: this.state.todoo,\r\n    });\r\n  }\r\n  changeH = (e, index) => {\r\n    this.state.todoo[index].key = e.target.value;\r\n    this.setState({\r\n      todoo: this.state.todoo,\r\n    });\r\n  };\r\n  update = (index) => {\r\n    this.state.todoo[index].edit = false;\r\n    this.setState({\r\n      todoo: this.state.todoo,\r\n    });\r\n  };\r\n  render() {\r\n    let { todoo, value } = this.state;\r\n    return (\r\n      <div className=\"main\">\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          placeholder=\"Todoo\"\r\n          value={value}\r\n          onChange={(e) => {\r\n            this.setState({ value: e.target.value });\r\n          }}\r\n        ></input>\r\n        <button className=\"addBtn\" onClick={this.add_todo}>\r\n          Add\r\n        </button>\r\n        <ul className=\"list\">\r\n          {todoo.map((v, i) => {\r\n            return (\r\n              <li key={i}>\r\n                {v.edit ? (\r\n                  <input\r\n                    className=\"edit-input\"\r\n                    value={v.key}\r\n                    type=\"text\"\r\n                    onChange={(e) => this.changeH(e, i)}\r\n                  />\r\n                ) : (\r\n                  v.key\r\n                )}\r\n                {v.edit ? (\r\n                  <button className=\"btn\" onClick={() => this.update(i)}>\r\n                    Update\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"btn\"\r\n                    onClick={() => this.edit_todoo(i, v.key)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                )}\r\n                <button className=\"btn\" onClick={() => this.delete_todoo(i)}>\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Todoo ;\r\n","E:\\BMJ React\\TodoReact\\todoo\\src\\reportWebVitals.js",[],"E:\\BMJ React\\TodoReact\\todoo\\src\\index.js",[],{"ruleId":"22","severity":1,"message":"23","line":25,"column":5,"nodeType":"24","endLine":25,"endColumn":28},{"ruleId":"22","severity":1,"message":"23","line":31,"column":5,"nodeType":"24","endLine":31,"endColumn":28},{"ruleId":"22","severity":1,"message":"23","line":37,"column":5,"nodeType":"24","endLine":37,"endColumn":28},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression"]